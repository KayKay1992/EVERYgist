Creating Blog Layout
===============================================================================
CODE EXPLANATION 

===============================================================================

1. src/components/Charts/CharAvatar.jsx
----------------------------------------
This is a React component that creates an avatar displaying user initials.

Key Features:
- Takes props: fullName, width, height, and style
- Uses the getInitials() helper function to extract initials from the full name
- Renders a circular div with customizable dimensions (defaults to w-12 and h-12)
- Styling: rounded-full with gray background and centered text
- Uses Tailwind CSS classes for responsive design
- Provides fallback empty string if fullName is not provided

Purpose: Display user avatars with their initials when profile images aren't available


2. src/components/layouts/BlogLayout/BlogLayout.jsx
----------------------------------------------------
This is a layout wrapper component for the blog pages.

Key Features:
- Wraps blog content with consistent layout structure
- Accepts children (content to be rendered) and activeMenu prop
- Contains BlogNavbar component for navigation
- Uses container with responsive padding (px-5 on mobile, px-0 on medium screens)
- White background with bottom padding
- Centers content with mx-auto

Purpose: Provides consistent layout structure across all blog pages


3. src/components/layouts/BlogLayout/BlogNavbar.jsx
----------------------------------------------------
This is the navigation bar component for the blog section.

Key Features:
- State Management: Uses useState for openSideMenu and openSearchBar
- Responsive Design: Shows hamburger menu on mobile, full nav on desktop
- Logo: Displays SVG logo with link to home
- Navigation Items: Maps through BLOG_NAVBAR_DATA to render menu items
- Interactive Elements:
  * Hamburger menu toggle (HiOutlineMenu/HiOutlineX icons)
  * Search button with icon
  * Login/SignUp button with gradient background
  * Animated underline effect on hover for nav items
- Conditional Rendering: Shows SideMenu when openSideMenu is true
- Sticky positioning with backdrop blur effect

Issues Found:
- setOpenAuthForm is called but never defined (line 61)
- onlySideMenu filter may cause issues

Purpose: Main navigation header for the blog with responsive menu


4. src/components/layouts/SideMenu.jsx
---------------------------------------
This is a sidebar navigation component that can be used for both blog and admin sections.

Key Features:
- Dynamic Menu: Switches between BLOG_NAVBAR_DATA and SIDE_MENU_DATA based on isBlogMenu prop
- User Profile Section:
  * Displays user avatar (either image or CharAvatar with initials)
  * Shows user name and email
  * Only visible when user is logged in
- Navigation Buttons:
  * Mapped from data arrays
  * Highlights active menu item with gradient background
  * Uses React Router's navigate for navigation
- Logout Functionality: Clears localStorage and redirects to home
- Fixed positioning with full height

Purpose: Reusable sidebar navigation component for the application


5. src/pages/Blog/BlogLandingPage.jsx
--------------------------------------
This is the main landing page for the blog section.

Key Features:
- Simple component wrapped in BlogLayout
- Currently displays placeholder text "BlogLandingPage"
- Will be expanded to show blog posts, featured content, etc.

Purpose: Entry point for the blog section (placeholder for future content)


6. src/utils/data.js
---------------------
This file contains navigation menu data structures.

Key Features:
- SIDE_MENU_DATA: Array of menu items for admin sidebar
  * Dashboard, Blog Posts, Comments sections
  * Each item has id, label, icon (from react-icons/lu), and path
  * Tags section commented out
  
- BLOG_NAVBAR_DATA: Array of menu items for blog navigation
  * Home, Reactjs, Nextjs sections
  * Uses same structure as SIDE_MENU_DATA
  * Category-based navigation

Purpose: Centralized data source for navigation menus across the app


7. src/utils/helper.js
-----------------------
This file contains utility helper functions.

Key Features:
- getInitials() function:
  * Takes a title/name string as parameter
  * Returns empty string if no input
  * Splits the name by spaces
  * Extracts first character from first two words
  * Returns uppercase initials
  * Bug Fix: Previous version incorrectly used words[1], now correctly uses words[i]

Purpose: Utility function to generate initials from full names


8. src/assets/auth-img-blog.jpg (New File)
-------------------------------------------
Image asset for authentication/blog pages


9. src/assets/logo.svg (New File)
----------------------------------
SVG logo file used in BlogNavbar and throughout the application


===============================================================================
SUMMARY OF CHANGES:
===============================================================================
- Created reusable avatar component with initials
- Built blog layout structure with navbar and sidebar
- Implemented responsive navigation with mobile menu
- Added utility functions for name initials
- Centralized navigation data
- Added logo and authentication images
- Fixed bug in getInitials function (words[i] instead of words[1])

Note: There's a bug in BlogNavbar.jsx where setOpenAuthForm is called but not defined.